//
//  PGCompassView.m
//  PGIPHONE
//
//  Created by Gianluca Folloni on 23/06/11.
//  Copyright 2011 SEAT Pagine Gialle. All rights reserved.
//


#import <QuartzCore/QuartzCore.h>
#import "PGCompass.h"


@implementation PGCompass


const int LineWidth = 3;

- (id)initWithPosition:(CGPoint)Position {
    
  self = [super initWithImage:[UIImage imageNamed:@"PgLib.bundle/CompassPoint.png"]];
  
  if ( self ) {
    self.frame = CGRectMake(Position.x, Position.y, self.frame.size.width, self.frame.size.height);

    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 0, 0)];
    label.contentMode = UIViewContentModeTop;
    [label setTextAlignment:UITextAlignmentCenter];
    [label setFont:[UIFont fontWithName:@"Verdana-Bold" size:14]];
    [label setTextColor: [[UIColor blackColor] colorWithAlphaComponent:0.8]];
    [label setBackgroundColor:[UIColor clearColor]];
    label.tag = Label;
    [label setText: @"N"];

    int height = self.frame.size.height + LineWidth;
    [label setFrame:CGRectMake(0, 0, height, [label.text sizeWithFont:label.font].height)];

    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, height, height)];
    [view setCenter:CGPointMake(self.frame.size.width / 2, self.frame.size.height / 2)];
    view.tag = View;
    view.layer.anchorPoint = CGPointMake(0.5, 0.5);
    
    CAShapeLayer *shape = [CAShapeLayer layer];

    CGMutablePathRef path = CGPathCreateMutable();
    CGPathAddEllipseInRect(path, NULL, CGRectMake(0, 0, view.frame.size.width, view.frame.size.height));
    shape.strokeColor =[[[UIColor blueColor] colorWithAlphaComponent:0.5] CGColor];
    shape.fillColor = [[UIColor clearColor] CGColor];
    shape.lineWidth = LineWidth;
    shape.path = path;
    CGPathRelease(path);
    
		[view.layer addSublayer:shape];

    [view addSubview:label];
    [label release];
    
    [self sendSubviewToBack:view];
    [self addSubview:view];
    [view release];
  }
  return self;
}

- (void) setAngle:(float)degrees {
  UIView *view = [self viewWithTag:View];
  view.transform = CGAffineTransformMakeRotation(degrees / 180.0 * M_PI);
}

- (void)drawRect:(CGRect)rect {

}


- (void)dealloc {
  [super dealloc];
}


@end

















